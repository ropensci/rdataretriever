# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# See https://github.com/r-lib/actions/tree/master/examples#readme for
# additional example workflows available for the R community.

name: R

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        r-version: [3.5, 3.6]
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      CRAN_REPO: https://packagemanager.rstudio.com/all/__linux__/focal/latest
    services:
      mysqldb_retriever:
        image: mysql:5.7
        env:
          MYSQL_USER: travis
          MYSQL_PASSWORD: Password12!
          MYSQL_ROOT_PASSWORD: Password12!
          MYSQL_DATABASE: testdb_retriever
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@v1
      - name: Install package dependencies
        run: |
          install.packages(c("remotes", "rcmdcheck", "reticulate"), repos = c("CRAN" = Sys.getenv("CRAN_REPO")))
          remotes::install_deps(dependencies = TRUE, repos = c("CRAN" = Sys.getenv("CRAN_REPO")))
        shell: Rscript {0}
      - uses: r-lib/actions/setup-pandoc@v1
      - name: Set up Postgresql with Postgis
        uses: huaxk/postgis-action@v1
        with:
          postgresql version: '11'
          postgresql user: 'postgres'
          postgresql password: 'Password12!'
          postgresql db: 'testdb_retriever'

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        env:
          LC_ALL : en_US.UTF-8
          ENV LANG : en_US.UTF-8
          ENV LANGUAGE : en_US.UTF-8
          TZ: America/New_York
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-add-repository ppa:ubuntugis/ubuntugis-unstable
          sudo apt-get update && sudo apt-get install -y --no-install-recommends apt-utils
          sudo apt-get install -y --force-yes tzdata
          sudo apt-get install -y --force-yes build-essential wget git locales locales-all > /dev/null
          sudo apt-get install -y --force-yes libpq-dev
          sudo apt-get install -y --force-yes libgdal-dev
          sudo apt-get install -y --force-yes gdal-bin
          export CPLUS_INCLUDE_PATH=/usr/include/gdal
          export C_INCLUDE_PATH=/usr/include/gdal
          sudo apt-get install -y --force-yes postgis
          
      - name: Setup paths and files
        run : |
          pwd
          chmod 0755 cli_tools/entrypoint.sh
          sh cli_tools/entrypoint.sh
          echo "export PATH="/usr/bin/python:$PATH"" >> ~/.profile
          echo "export PYTHONPATH="/usr/bin/python:$PYTHONPATH"" >> ~/.profile
          echo "export PGPASSFILE="~/.pgpass"" >> ~/.profile
          chmod 0644 ~/.profile
      
      - name: PostGIS check version
        run : |
          export PGPASSWORD='Password12!'
          psql -d testdb_retriever -U postgres -h localhost -p 5432 -c "SELECT PostGIS_version();"

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install GDAL==3.2.3
          python -m pip install flake8 pytest yapf codecov pytest-cov pytest-xdist -U
          python -m pip install h5py pillow kaggle psycopg2-binary pymysql -U
      - name: Install retriever
        run: |
          pip install git+https://git@github.com/weecology/retriever.git
          export PGPASSFILE="~/.pgpass"
          chmod 600 ~/.pgpass
          chmod 600 ~/.my.cnf

      - uses: actions/checkout@v2
      - name: Set up R ${{ matrix.r-version }}
        uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.r-version }}
      - name: Install rdataretriever
        run: |
          reticulate::install_miniconda()
          reticulate::py_install('retriever', pip=TRUE)
          install.packages(".", repos = NULL, type="source", quiet = FALSE, verbose = TRUE)
        shell: Rscript {0}
      - name: Check
        run: |
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "error")
        shell: Rscript {0}